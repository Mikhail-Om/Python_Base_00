# Практическое задание к третьей лекции
#
#
#Задание 1
#
# Реализовать функцию, принимающую два числа (позиционные аргументы) и выполняющую их деление. 
# Числа запрашивать у пользователя, предусмотреть обработку ситуации деления на ноль.
def div(a,b):
    a=int(a)
    b=int(b)
    if b == 0:
        print("На ноль делить нельзя")
        return
    return a / b
print(div(a=input("a ="),b=input("b =")))
    
########################################################################################################################################
#Задание 2
#
# Выполнить функцию, которая принимает несколько параметров, описывающих данные пользователя: 
# имя, фамилия, год рождения, город проживания, email, телефон. 
# Функция должна принимать параметры как именованные аргументы. 
# Осуществить вывод данных о пользователе одной строкой.

def func(name, surname, year, city_1, city_2, email, phone):
    print(f"Name - {name}; Surname-{surname}; year - {year}; city of birth - {city_1}; City of residence - {city_2}; email - {email}; phone - {phone}")
func(name="Myname", 
     surname="Mysurname", 
     year="Myyear", 
     city_1="Mycityofbirth", 
     city_2="MyCityofresidence", 
     email="Myemail", 
     phone="Myphone")


 ########################################################################################################################################
#Задание 3
#
# Реализовать функцию my_func(), которая принимает три позиционных аргумента и возвращает сумму наибольших двух аргументов.
def my_func(a,b,c):
    arg_iter=[a,b,c]
    d=int(0)
    e=int(0)
    d=max(arg_iter)
    arg_iter.pop(arg_iter.index(d))
    e=max(arg_iter)
    s=d+e
    return s
print(my_func(int(input("a= ")),int(input("b= ")), int(input("c= "))))

########################################################################################################################################
#Задание 4
#
# Программа принимает действительное положительное число x и целое отрицательное число y. 
# Выполните возведение числа x в степень y. 
# Задание реализуйте в виде функции my_func(x, y). При решении задания нужно обойтись без встроенной функции возведения числа в степень.
# Подсказка: попробуйте решить задачу двумя способами. Первый — возведение в степень с помощью оператора **. 
# Второй — более сложная реализация без оператора **, предусматривающая использование цикла.
def my_funcA(x, y):
    x = abs(x)
    y = abs(y)
    rez = x ** y
    return rez
print(my_funcA(float(input("x= ")),int(input("y= "))))

###

def my_funcB(x, y):
    x = abs(x)
    y = abs(y)
    rez=x
    i = y
    while i > 1:
        rez *= x 
        i = i - 1
    return rez
print(my_funcB(float(input("x= ")),int(input("y= "))))

###

def my_funcC(x, y):
    x = abs(x)
    y = abs(y)
    rez=pow(x,y)
    return rez
print(my_funcC(float(input("x= ")),int(input("y= "))))


################################################################################################################################
#Задание 5
#
# Программа запрашивает у пользователя строку чисел, разделённых пробелом. При нажатии Enter должна выводиться сумма чисел. 
# Пользователь может продолжить ввод чисел, разделённых пробелом и снова нажать Enter. 
# Сумма вновь введённых чисел будет добавляться к уже подсчитанной сумме.
# Но если вместо числа вводится специальный символ, выполнение программы завершается. 
# Если специальный символ введён после нескольких чисел, 
# то вначале нужно добавить сумму этих чисел к полученной ранее сумме и после этого завершить программу.
def funsum(t):
    sum=int(0)
    for i, item in enumerate(t):       
        t[i] = int(item)
    k=int(0)
    while k < (len(t)):
        sum = sum + t[k]
        k = k + 1
    return sum


k=int(0)
s = int(0)
global bull, summ
bull=True
summ = int(0)
while bull:
    zn = input("Введите числа через пробел. Для окончания введите s ").split()
    for i, item in enumerate(zn):
        if zn[i] == "s":
            bull = False
            zn[i] =int(0)
            break
        zn[i] = int(item)
    s = funsum(zn)
    summ = summ + s
    
    print("Сумма: ",summ)
#     k=k+1
# funsum()   


########################################################################################################################################
#Задание 6
#
# Реализовать функцию int_func(), принимающую слова из маленьких латинских букв и возвращающую их же, 
# но с прописной первой буквой. Например, print(int_func(‘text’)) -> Text.
def int_func(word):
    word=word.title()
    return word
print(int_func(input("Введите слово ")))
# .title() работает и с одним словом и со строкой, одновременно выполняя задание 7